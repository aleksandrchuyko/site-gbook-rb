{"version":3,"file":"static/js/964.4c21cc9f.chunk.js","mappings":"0NAKaA,EAAc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC5B,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,UAAS,IAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAEMC,EAAe,SAAAC,GAEnB,OADyBA,EAAEC,cAAcN,MAEvC,IAAK,OACHC,EAAQI,EAAEC,cAAcC,OACxB,MACF,IAAK,UACHJ,EAAWE,EAAEC,cAAcC,OAC3B,MACF,QACE,OAEL,EAWD,OACE,SAACC,EAAAA,IAAD,WACE,UAACC,EAAA,EAAD,CAAMX,SAXW,SAAAO,GACnBA,EAAEK,iBAEFZ,EAAS,CAAEE,KAAAA,EAAME,QAAAA,IAEjBD,EAAQ,IACRE,EAAW,GACZ,EAIG,WACE,UAACM,EAAA,QAAD,CAAYE,UAAU,OAAOC,UAAU,gBAAvC,WACE,SAACH,EAAA,QAAD,oBACA,SAACA,EAAA,UAAD,CACEI,KAAK,OACLb,KAAK,OACLO,MAAOP,EACPc,SAAUV,EACVW,QAAQ,6JACRC,MAAM,8DACNC,aAAa,MACbC,UAAQ,QAGZ,UAACT,EAAA,QAAD,CAAYE,UAAU,OAAOC,UAAU,mBAAvC,WACE,SAACH,EAAA,QAAD,uBACA,SAACA,EAAA,UAAD,CACEI,KAAK,OACLb,KAAK,UACLO,MAAOL,EACPY,SAAUV,EACVW,QAAQ,6JACRE,aAAa,MACbC,UAAQ,QAGZ,SAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUP,KAAK,SAA/B,qBAMP,E,UC9DYQ,EAAiB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,GAAIC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,eACzC,GAAmDC,EAAAA,EAAAA,MAAnD,eAAOC,EAAP,KAAmCC,EAAnC,KAAwBC,UACxB,OACE,4BACE,SAACT,EAAA,EAAD,CACEC,QAAQ,oBACRS,KAAK,KACLhB,KAAK,SACLiB,QAAS,WACPN,EAAeF,GACfC,GACD,EAPH,mBAWA,SAACJ,EAAA,EAAD,CACEC,QAAQ,oBACRS,KAAK,KACLhB,KAAK,SACLkB,SAAUJ,EACVG,QAAS,WACPJ,EAAcJ,EACf,EAPH,sBAaL,E,gDC7BYU,GAAmBC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,CAAH,2ECGhBE,EAAc,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,SAAUb,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,eA4BtCa,EAAOD,EAASE,KAAI,SAAAC,GACxB,MAAO,CACLjB,GAAIiB,EAAQC,IACZxC,KAAMuC,EAAQvC,KACdE,QAASqC,EAAQrC,QACjBuC,UAAW,IAAIC,KAAKH,EAAQE,WAAWE,iBACvCC,QACE,SAACvB,EAAD,CACEC,GAAIiB,EAAQC,IACZjB,KAAMA,EACNC,eAAgBA,IAIvB,IAED,OACE,SAACQ,EAAD,WACE,SAAC,IAAD,CAAgBa,SAAS,KAAKR,KAAMA,EAAMS,QA7C9B,CACd,CACEC,UAAW,KACXC,KAAM,aACNC,QAAQ,GAEV,CACEF,UAAW,OACXC,KAAM,OACNE,MAAM,GAER,CACEH,UAAW,UACXC,KAAM,UACNE,MAAM,GAER,CACEH,UAAW,YACXC,KAAM,gBACNE,MAAM,GAER,CACEH,UAAW,SACXC,KAAM,eAyBX,ECnDYG,EAAS,SAAC,GAAwB,IAAtBnD,EAAqB,EAArBA,KAAMc,EAAe,EAAfA,SAC7B,OACE,SAACN,EAAAA,IAAD,WACE,SAACC,EAAA,EAAD,WACE,UAACA,EAAA,QAAD,CAAYE,UAAU,OAAOC,UAAU,gBAAvC,WACE,SAACH,EAAA,QAAD,8BACA,SAACA,EAAA,UAAD,CACEI,KAAK,OACLb,KAAK,OACLO,MAAOP,EACPc,SAAUA,UAMrB,E,oBChBYsC,EAAgB,SAAC,GAAkC,IAAhCb,EAA+B,EAA/BA,QAASzC,EAAsB,EAAtBA,SAAUuD,EAAY,EAAZA,MACjD,GAAwBtD,EAAAA,EAAAA,UAASwC,EAAQvC,MAAzC,eAAOA,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,UAASwC,EAAQrC,SAA/C,eAAOA,EAAP,KAAgBC,EAAhB,KAEMC,EAAe,SAAAC,GAEnB,OADyBA,EAAEC,cAAcN,MAEvC,IAAK,OACHC,EAAQI,EAAEC,cAAcC,OACxB,MACF,IAAK,UACHJ,EAAWE,EAAEC,cAAcC,OAC3B,MACF,QACE,OAEL,EAWD,OACE,SAAC+C,EAAA,EAAD,CACEC,MAAO,CACLC,OAAQ,OACRC,MAAO,OACPC,SAAU,WACVC,OAAQ,EACRC,gBAAiB,QANrB,UASE,SAACC,EAAA,EAAD,CAAMN,MAAO,CAAEO,QAAS,QAAxB,UACE,UAACrD,EAAA,EAAD,CAAMX,SApBS,SAAAO,GACnBA,EAAEK,iBAEFZ,EAAS,CAAEwB,GAAIiB,EAAQC,IAAKxC,KAAAA,EAAME,QAAAA,IAElCD,EAAQ,IACRE,EAAW,IACXkD,GACD,EAYK,WACE,UAAC5C,EAAA,QAAD,CAAYE,UAAU,OAAOC,UAAU,gBAAvC,WACE,SAACH,EAAA,QAAD,oBACA,SAACA,EAAA,UAAD,CACEI,KAAK,OACLb,KAAK,OACLO,MAAOP,EACPc,SAAUV,EACVW,QAAQ,6JACRC,MAAM,8DACNC,aAAa,MACbC,UAAQ,QAGZ,UAACT,EAAA,QAAD,CAAYE,UAAU,OAAOC,UAAU,mBAAvC,WACE,SAACH,EAAA,QAAD,uBACA,SAACA,EAAA,UAAD,CACEI,KAAK,OACLb,KAAK,UACLO,MAAOL,EACPY,SAAUV,EACVW,QAAQ,6JACRE,aAAa,MACbC,UAAQ,QAGZ,SAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUP,KAAK,SAA/B,mBAGA,SAACM,EAAA,EAAD,CACEC,QAAQ,UACRmC,MAAO,CAAEQ,WAAY,QACrBlD,KAAK,SACLiB,QAAS,WACPuB,GACD,EANH,0BAcT,E,oBCyBD,EA3FqB,WACnB,IAAMW,GAAWC,EAAAA,EAAAA,MACjB,GAA8BlE,EAAAA,EAAAA,UAAS,CAAC,GAAxC,eAAOwC,EAAP,KAAgB2B,EAAhB,KACA,ECpBuB,WACvB,OAA4BnE,EAAAA,EAAAA,WAAS,GAArC,eAAOoE,EAAP,KAAeC,EAAf,KAKA,MAAO,CAAED,OAAAA,EAAQ5C,KAJJ,kBAAM6C,GAAU,EAAhB,EAIUf,MAHT,kBAAMe,GAAU,EAAhB,EAGgBC,OAFf,kBAAMD,GAAU,SAAAD,GAAM,OAAKA,CAAL,GAAtB,EAGhB,CDaiCG,GAAxBH,EAAR,EAAQA,OAAQ5C,EAAhB,EAAgBA,KAAM8B,EAAtB,EAAsBA,MAEhBkB,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IAC3B,GAIIC,EAAAA,EAAAA,IAAuB,GAAI,CAC7BC,2BAA2B,IAJrBvC,EADR,EACEC,KACAT,EAFF,EAEEA,UACAgD,EAHF,EAGEA,UAKF,GAAqBC,EAAAA,EAAAA,MAAdC,GAAP,eAEA,GAAwBC,EAAAA,EAAAA,MAAjBC,GAAP,eA6BMC,EAzBAV,EAAOW,OACF9C,EAASmC,QAAO,SAAAhC,GACrB,OAAOA,EAAQvC,KAAKmF,cAAcC,SAASb,EAAOY,cACnD,IACW/C,EAuBhB,OACE,UAACF,EAAA,EAAD,CACEvB,UAAU,OACV4C,MAAO,CACLG,SAAU,YAHd,UAMGS,IACC,SAACf,EAAD,CACEhB,SAAUA,EACVG,QAASA,EACTc,MAAOA,EACPvD,SAvBoB,SAAC,GAAqC,IAAnCwB,EAAkC,EAAlCA,GAAItB,EAA8B,EAA9BA,KAAME,EAAwB,EAAxBA,QAASmF,EAAe,EAAfA,SAChDL,EAAc,CAAEM,UAAWhE,EAAItB,KAAAA,EAAME,QAAAA,EAASmF,SAAAA,GAC/C,KAyBKzD,GAAagD,IACb,UAACtB,EAAA,EAAD,YACE,SAACO,EAAA,EAAD,WACE,UAACA,EAAA,OAAD,YACE,SAACA,EAAA,QAAD,2BACA,SAAChE,EAAD,CACEuC,SAAUA,EACVtC,SAtCW,SAAC,GAAiC,IAA/BE,EAA8B,EAA9BA,KAAME,EAAwB,EAAxBA,QAASmF,EAAe,EAAfA,SACzCP,EAAW,CAAE9E,KAAAA,EAAME,QAAAA,EAASmF,SAAAA,GAC7B,UAwCO,SAACxB,EAAA,EAAD,WACE,UAACA,EAAA,OAAD,YACE,SAACA,EAAA,QAAD,4BACA,SAACV,EAAD,CAAQnD,KAAMuE,EAAQzD,SArCb,SAAAT,GACnB2D,GAASuB,EAAAA,EAAAA,IAAUlF,EAAEmF,OAAOjF,OAC7B,KAoCW,SAAC4B,EAAD,CACEC,SAAU6C,EACV1D,KAAMA,EACNC,eAtDS,SAAAF,GACrB4C,EAAW9B,EAASqD,MAAK,SAAAlD,GAAO,OAAIA,EAAQC,MAAQlB,CAApB,IACjC,cA4DF,C","sources":["components/VisitorForm/VisitorForm.jsx","components/VisitorList/VisitorActions/VisitorActions.jsx","components/VisitorList/VisitorList.styled.js","components/VisitorList/VisitorList.jsx","components/Filter/Filter.jsx","components/VisitorEditor/VisitorEditor.jsx","pages/VisitorsView.jsx","hooks/useToggle.js"],"sourcesContent":["import { useState } from 'react';\n\nimport { Form, Button } from 'react-bootstrap';\nimport { Box } from 'components/Box';\n\nexport const VisitorForm = ({ onSubmit }) => {\n  const [name, setName] = useState('');\n  const [surname, setSurname] = useState('');\n\n  const handleChange = e => {\n    const currentInputName = e.currentTarget.name;\n    switch (currentInputName) {\n      case 'name':\n        setName(e.currentTarget.value);\n        break;\n      case 'surname':\n        setSurname(e.currentTarget.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit({ name, surname });\n\n    setName('');\n    setSurname('');\n  };\n\n  return (\n    <Box>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group className=\"mb-2\" controlId=\"formBasicName\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Яа-їґЄ-ЯҐ]+(?:-[a-zA-Zа-яА-Яа-їґЄ-ЯҐ]+)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces.\"\n            autoComplete=\"off\"\n            required\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-2\" controlId=\"formBasicSurname\">\n          <Form.Label>Surname</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"surname\"\n            value={surname}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Яа-їґЄ-ЯҐ]+(?:-[a-zA-Zа-яА-Яа-їґЄ-ЯҐ]+)*$\"\n            autoComplete=\"off\"\n            required\n          />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n          Add\n        </Button>\n      </Form>\n    </Box>\n  );\n};\n","import { Button } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { useRemoveVisitorMutation } from 'redux/visitors/visitors-api';\n\nexport const VisitorActions = ({ id, open, getVisitorById }) => {\n  const [removeVisitor, { isLoading: isDeleting }] = useRemoveVisitorMutation();\n  return (\n    <div>\n      <Button\n        variant=\"outline-secondary\"\n        size=\"sm\"\n        type=\"button\"\n        onClick={() => {\n          getVisitorById(id);\n          open();\n        }}\n      >\n        Edit\n      </Button>\n      <Button\n        variant=\"outline-secondary\"\n        size=\"sm\"\n        type=\"button\"\n        disabled={isDeleting}\n        onClick={() => {\n          removeVisitor(id);\n        }}\n      >\n        Delete\n      </Button>\n    </div>\n  );\n};\n\nVisitorActions.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport { Container } from 'react-bootstrap';\n\nexport const VisitorContainer = styled(Container)`\n  padding: 0;\n  & table {\n    width: 100%;\n  }\n`;\n","import { VisitorActions } from 'components/VisitorList/VisitorActions/VisitorActions';\nimport PropTypes from 'prop-types';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport { VisitorContainer } from './VisitorList.styled';\n\nexport const VisitorList = ({ visitors, open, getVisitorById }) => {\n  const columns = [\n    {\n      dataField: 'id',\n      text: 'Visitor ID',\n      hidden: true,\n    },\n    {\n      dataField: 'name',\n      text: 'Name',\n      sort: true,\n    },\n    {\n      dataField: 'surname',\n      text: 'Surname',\n      sort: true,\n    },\n    {\n      dataField: 'createdAt',\n      text: 'Date of visit',\n      sort: true,\n    },\n    {\n      dataField: 'action',\n      text: 'Actions',\n    },\n  ];\n\n  const data = visitors.map(visitor => {\n    return {\n      id: visitor._id,\n      name: visitor.name,\n      surname: visitor.surname,\n      createdAt: new Date(visitor.createdAt).toLocaleString(),\n      action: (\n        <VisitorActions\n          id={visitor._id}\n          open={open}\n          getVisitorById={getVisitorById}\n        ></VisitorActions>\n      ),\n    };\n  });\n\n  return (\n    <VisitorContainer>\n      <BootstrapTable keyField=\"id\" data={data} columns={columns} />\n    </VisitorContainer>\n  );\n};\n\nVisitorList.propTypes = {\n  visitors: PropTypes.arrayOf(\n    PropTypes.exact({\n      _id: PropTypes.string,\n      name: PropTypes.string.isRequired,\n      surname: PropTypes.string.isRequired,\n      createdAt: PropTypes.string.isRequired,\n      owner: PropTypes.exact({\n        _id: PropTypes.string.isRequired,\n        email: PropTypes.string.isRequired,\n      }),\n    })\n  ).isRequired,\n};\n","import { Box } from 'components/Box';\nimport PropTypes from 'prop-types';\nimport { Form } from 'react-bootstrap';\n\nexport const Filter = ({ name, onChange }) => {\n  return (\n    <Box>\n      <Form>\n        <Form.Group className=\"mb-2\" controlId=\"formBasicName\">\n          <Form.Label>Filter by Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            name=\"find\"\n            value={name}\n            onChange={onChange}\n          />\n        </Form.Group>\n      </Form>\n    </Box>\n  );\n};\n\nFilter.propTypes = {\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","// import { Box } from 'components/Box';\nimport { useState } from 'react';\nimport { Card, CardGroup, Button, Form } from 'react-bootstrap';\n\nexport const VisitorEditor = ({ visitor, onSubmit, close }) => {\n  const [name, setName] = useState(visitor.name);\n  const [surname, setSurname] = useState(visitor.surname);\n\n  const handleChange = e => {\n    const currentInputName = e.currentTarget.name;\n    switch (currentInputName) {\n      case 'name':\n        setName(e.currentTarget.value);\n        break;\n      case 'surname':\n        setSurname(e.currentTarget.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit({ id: visitor._id, name, surname });\n\n    setName('');\n    setSurname('');\n    close();\n  };\n  return (\n    <CardGroup\n      style={{\n        height: '100%',\n        width: '100%',\n        position: 'absolute',\n        zIndex: 1,\n        backgroundColor: '#fff',\n      }}\n    >\n      <Card style={{ padding: '20px' }}>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group className=\"mb-2\" controlId=\"formBasicName\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={handleChange}\n              pattern=\"^[a-zA-Zа-яА-Яа-їґЄ-ЯҐ]+(?:-[a-zA-Zа-яА-Яа-їґЄ-ЯҐ]+)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces.\"\n              autoComplete=\"off\"\n              required\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-2\" controlId=\"formBasicSurname\">\n            <Form.Label>Surname</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"surname\"\n              value={surname}\n              onChange={handleChange}\n              pattern=\"^[a-zA-Zа-яА-Яа-їґЄ-ЯҐ]+(?:-[a-zA-Zа-яА-Яа-їґЄ-ЯҐ]+)*$\"\n              autoComplete=\"off\"\n              required\n            />\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            Save\n          </Button>\n          <Button\n            variant=\"primary\"\n            style={{ marginLeft: '30px' }}\n            type=\"button\"\n            onClick={() => {\n              close();\n            }}\n          >\n            Cancel\n          </Button>\n        </Form>\n      </Card>\n    </CardGroup>\n  );\n};\n","import { useState } from 'react';\n\nimport { VisitorForm } from 'components/VisitorForm/VisitorForm';\nimport { VisitorList } from 'components/VisitorList/VisitorList';\nimport { Filter } from 'components/Filter/Filter';\nimport { VisitorEditor } from 'components/VisitorEditor/VisitorEditor';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter, setFilter } from 'redux/visitorlistSlice';\n\nimport {\n  useAddVisitorMutation,\n  useGetAllVisitorsQuery,\n  useUpdateVisitorMutation,\n} from 'redux/visitors/visitors-api';\nimport { Card, CardGroup, Container } from 'react-bootstrap';\n\nimport { useToggle } from 'hooks/useToggle';\n\nconst VisitorsView = () => {\n  const dispatch = useDispatch();\n  const [visitor, setVisitor] = useState({});\n  const { isOpen, open, close } = useToggle();\n\n  const filter = useSelector(getFilter);\n  const {\n    data: visitors,\n    isLoading,\n    isSuccess,\n  } = useGetAllVisitorsQuery('', {\n    refetchOnMountOrArgChange: true,\n  });\n\n  const [addVisitor] = useAddVisitorMutation();\n\n  const [updateVisitor] = useUpdateVisitorMutation();\n\n  //get visitors list by filter\n  const getFilteredVisitors = () => {\n    if (filter.trim()) {\n      return visitors.filter(visitor => {\n        return visitor.name.toLowerCase().includes(filter.toLowerCase());\n      });\n    } else return visitors;\n  };\n\n  const getVisitorById = id => {\n    setVisitor(visitors.find(visitor => visitor._id === id));\n  };\n\n  //redux actions\n  const handleAddVisitor = ({ name, surname, password }) => {\n    addVisitor({ name, surname, password });\n  };\n\n  const handleUpdateVisitor = ({ id, name, surname, password }) => {\n    updateVisitor({ visitorId: id, name, surname, password });\n  };\n\n  const updateFilter = e => {\n    dispatch(setFilter(e.target.value));\n  };\n  //------------------\n\n  const filteredVisitors = getFilteredVisitors();\n\n  return (\n    <Container\n      className=\"mt-2\"\n      style={{\n        position: 'relative',\n      }}\n    >\n      {isOpen && (\n        <VisitorEditor\n          visitors={visitors}\n          visitor={visitor}\n          close={close}\n          onSubmit={handleUpdateVisitor}\n        />\n      )}\n\n      {!isLoading && isSuccess && (\n        <CardGroup>\n          <Card>\n            <Card.Body>\n              <Card.Title>New visitor</Card.Title>\n              <VisitorForm\n                visitors={visitors}\n                onSubmit={handleAddVisitor}\n              ></VisitorForm>\n            </Card.Body>\n          </Card>\n          <Card>\n            <Card.Body>\n              <Card.Title>Visitor list</Card.Title>\n              <Filter name={filter} onChange={updateFilter}></Filter>\n              <VisitorList\n                visitors={filteredVisitors}\n                open={open}\n                getVisitorById={getVisitorById}\n              />\n            </Card.Body>\n          </Card>\n        </CardGroup>\n      )}\n    </Container>\n  );\n};\n\nexport default VisitorsView;\n","import { useState } from 'react';\n\nexport const useToggle = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const open = () => setIsOpen(true);\n  const close = () => setIsOpen(false);\n  const toggle = () => setIsOpen(isOpen => !isOpen);\n\n  return { isOpen, open, close, toggle };\n};"],"names":["VisitorForm","onSubmit","useState","name","setName","surname","setSurname","handleChange","e","currentTarget","value","Box","Form","preventDefault","className","controlId","type","onChange","pattern","title","autoComplete","required","Button","variant","VisitorActions","id","open","getVisitorById","useRemoveVisitorMutation","removeVisitor","isDeleting","isLoading","size","onClick","disabled","VisitorContainer","styled","Container","VisitorList","visitors","data","map","visitor","_id","createdAt","Date","toLocaleString","action","keyField","columns","dataField","text","hidden","sort","Filter","VisitorEditor","close","CardGroup","style","height","width","position","zIndex","backgroundColor","Card","padding","marginLeft","dispatch","useDispatch","setVisitor","isOpen","setIsOpen","toggle","useToggle","filter","useSelector","getFilter","useGetAllVisitorsQuery","refetchOnMountOrArgChange","isSuccess","useAddVisitorMutation","addVisitor","useUpdateVisitorMutation","updateVisitor","filteredVisitors","trim","toLowerCase","includes","password","visitorId","setFilter","target","find"],"sourceRoot":""}